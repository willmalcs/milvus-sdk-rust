    // impl MilvusServiceClient<tonic::transport::Channel> {
    //     /// Attempt to create a new client by connecting to a given endpoint.
    //     pub async fn connect<D>(dst: D) -> Result<Self, tonic::transport::Error>
    //     where
    //         D: std::convert::TryInto<tonic::transport::Endpoint>,
    //         D::Error: Into<StdError>,
    //     {
    //         let conn = tonic::transport::Endpoint::new(dst)?.connect().await?;
    //         Ok(Self::new(conn))
    //     }
    // }